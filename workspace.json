{
  "version": 2,
  "projects": {
    "auction-history": {
      "root": "apps/auction-history",
      "sourceRoot": "apps/auction-history/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/auction-history",
            "main": "apps/auction-history/src/main.ts",
            "tsConfig": "apps/auction-history/tsconfig.app.json",
            "generatePackageJson": true
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          }
        },
        "serve": {
          "executor": "@nrwl/node:execute",
          "options": {
            "buildTarget": "auction-history:build"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/auction-history/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/auction-history"],
          "options": {
            "jestConfig": "apps/auction-history/jest.config.js",
            "passWithNoTests": true
          }
        },
        "deploy": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "rm -rf ./dist/apps/auction-history",
              "nx build auction-history",
              "docker build -f ./apps/auction-history/deploy/Dockerfile -t registry.ucandoit.io/auction-history .",
              "docker push registry.ucandoit.io/auction-history:latest"
            ],
            "parallel": false
          }
        }
      },
      "tags": []
    },
    "blizz-client": {
      "root": "apps/blizz-client",
      "sourceRoot": "apps/blizz-client/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/blizz-client",
            "main": "apps/blizz-client/src/main.ts",
            "tsConfig": "apps/blizz-client/tsconfig.app.json",
            "assets": ["apps/blizz-client/src/config"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/blizz-client/src/environments/environment.ts",
                  "with": "apps/blizz-client/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/node:execute",
          "options": {
            "buildTarget": "blizz-client:build"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/blizz-client/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/blizz-client"],
          "options": {
            "jestConfig": "apps/blizz-client/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "blizz-data": {
      "root": "apps/blizz-data",
      "sourceRoot": "apps/blizz-data/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/blizz-data",
            "main": "apps/blizz-data/src/main.ts",
            "tsConfig": "apps/blizz-data/tsconfig.app.json",
            "generatePackageJson": true
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          }
        },
        "serve": {
          "executor": "@nrwl/node:execute",
          "options": {
            "buildTarget": "blizz-data:build"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/blizz-data/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/blizz-data"],
          "options": {
            "jestConfig": "apps/blizz-data/jest.config.js",
            "passWithNoTests": true
          }
        },
        "deploy": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "rm -rf ./dist/apps/blizz-data",
              "nx run blizz-data:build:production",
              "docker build -f ./apps/blizz-data/deploy/Dockerfile -t registry.ucandoit.io/blizz-data .",
              "docker push registry.ucandoit.io/blizz-data:latest"
            ],
            "parallel": false
          }
        }
      },
      "tags": []
    },
    "bootybay-front": {
      "root": "apps/bootybay-front",
      "sourceRoot": "apps/bootybay-front/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/web:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/bootybay-front",
            "index": "apps/bootybay-front/src/index.html",
            "main": "apps/bootybay-front/src/main.tsx",
            "polyfills": "apps/bootybay-front/src/polyfills.ts",
            "tsConfig": "apps/bootybay-front/tsconfig.app.json",
            "assets": ["apps/bootybay-front/src/favicon.ico"],
            "styles": [],
            "scripts": [],
            "webpackConfig": "@nrwl/react/plugins/webpack"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/bootybay-front/src/environments/environment.ts",
                  "with": "apps/bootybay-front/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "2mb"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "bootybay-front:build",
            "hmr": true,
            "proxyConfig": "apps/bootybay-front/proxy.conf.json"
          },
          "configurations": {
            "production": {
              "buildTarget": "bootybay-front:build:production",
              "hmr": false
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/bootybay-front/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/bootybay-front"],
          "options": {
            "jestConfig": "apps/bootybay-front/jest.config.js",
            "passWithNoTests": true
          }
        },
        "deploy": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "rm -rf ./dist/apps/bootybay-front",
              "nx run bootybay-front:build:production",
              "docker build -f ./apps/bootybay-front/deploy/Dockerfile -t registry.ucandoit.io/bootybay-front .",
              "docker push registry.ucandoit.io/bootybay-front:latest"
            ],
            "parallel": false
          }
        }
      }
    },
    "bootybay-front-e2e": {
      "root": "apps/bootybay-front-e2e",
      "sourceRoot": "apps/bootybay-front-e2e/src",
      "projectType": "application",
      "targets": {
        "e2e": {
          "executor": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/bootybay-front-e2e/cypress.json",
            "tsConfig": "apps/bootybay-front-e2e/tsconfig.e2e.json",
            "devServerTarget": "bootybay-front:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "bootybay-front:serve:production"
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/bootybay-front-e2e/**/*.{js,ts}"]
          }
        }
      }
    },
    "common-interfaces": {
      "root": "libs/common-interfaces",
      "sourceRoot": "libs/common-interfaces/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/common-interfaces/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/common-interfaces"],
          "options": {
            "jestConfig": "libs/common-interfaces/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "tsm-data-collector": {
      "root": "apps/tsm-data-collector",
      "sourceRoot": "apps/tsm-data-collector",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/tsm-data-collector",
            "main": "apps/tsm-data-collector/src/main.ts",
            "tsConfig": "apps/tsm-data-collector/tsconfig.app.json",
            "assets": ["apps/tsm-data-collector/config/application.yaml"],
            "generatePackageJson": true
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          }
        },
        "serve": {
          "executor": "@nrwl/node:execute",
          "options": {
            "buildTarget": "tsm-data-collector:build"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/tsm-data-collector/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/tsm-data-collector"],
          "options": {
            "jestConfig": "apps/tsm-data-collector/jest.config.js",
            "passWithNoTests": true
          }
        },
        "deploy": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "rm -rf ./dist/apps/tsm-data-collector",
              "nx build tsm-data-collector",
              "docker build -f ./apps/tsm-data-collector/deploy/Dockerfile -t registry.ucandoit.io/tsm-data-collector .",
              "docker push registry.ucandoit.io/tsm-data-collector:latest"
            ],
            "parallel": false
          }
        }
      }
    },
    "tsm-data-processor": {
      "root": "apps/tsm-data-processor",
      "sourceRoot": "apps/tsm-data-processor",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/tsm-data-processor",
            "main": "apps/tsm-data-processor/src/main.ts",
            "tsConfig": "apps/tsm-data-processor/tsconfig.app.json",
            "assets": ["apps/tsm-data-processor/config"],
            "generatePackageJson": true
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          }
        },
        "serve": {
          "executor": "@nrwl/node:execute",
          "options": {
            "buildTarget": "tsm-data-processor:build"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/tsm-data-processor/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/tsm-data-processor"],
          "options": {
            "jestConfig": "apps/tsm-data-processor/jest.config.js",
            "passWithNoTests": true
          }
        },
        "deploy": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "rm -rf ./dist/apps/tsm-data-processor",
              "nx build tsm-data-processor",
              "docker build -f ./apps/tsm-data-processor/deploy/Dockerfile -t registry.ucandoit.io/tsm-data-processor .",
              "docker push registry.ucandoit.io/tsm-data-processor:latest"
            ],
            "parallel": false
          }
        }
      }
    }
  },
  "cli": {
    "defaultCollection": "@nrwl/node"
  },
  "defaultProject": "tsm-data-collector",
  "generators": {
    "@nrwl/react": {
      "application": {
        "style": "@emotion/styled",
        "linter": "eslint",
        "babel": true
      },
      "component": {
        "style": "@emotion/styled"
      },
      "library": {
        "style": "@emotion/styled",
        "linter": "eslint"
      }
    }
  }
}
